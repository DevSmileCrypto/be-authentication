spring.cloud.config.enabled=false

server.port=8102

host=${LOCAL_IP:localhost}

#
## Actuator ##
#
management.endpoints.web.exposure.include=refresh
#
## Gateway Configuration ##
#
gateway.host=www.cryptobrewmaster.io
gateway.uri=https://${gateway.host}
#
## Admin Gateway Configuration ##
#
admin-gateway.host=admin.cryptobrewmaster.io
admin-gateway.uri=https://${admin-gateway.host}
#
## JWT Configuration ##
#
jwt.crypto.secret-key=crypto-secret-key
jwt.token.secret-key=token-secret-key
jwt.token.access.expire-length=3600000
jwt.token.refresh.expire-length=86400000
#
## HiveSigner Configuration ##
#
hive.signer.app=dkryvak
hive.signer.base-url=https://hivesigner.com
hive.signer.api-gateway.callback-url=${gateway.uri}/api/authentication/login/signer/redirect
hive.signer.admin-gateway.callback-url=${admin-gateway.uri}/api/authentication/login/signer/redirect
hive.signer.scope=login,posting,custom_json,comment,vote,offline
hive.signer.client-secret=secretbrewmastergame
#
## HiveKeychain ##
#
hive.keychain.validator.node-path=/usr/bin/node
hive.keychain.validator.file-path=script/validator.js
hive.keychain.validator.method=validate
hive.keychain.validator.timeout=5
#
## Microservices data ##
#
ms.api.path=/api
## Account ##
ms.account.host=${host}
ms.account.port=8103
ms.account.uri=http://${ms.account.host}:${ms.account.port}

ms.account.path.account.create-or-get=${ms.api.path}/account/create/or/get/{wallet}
ms.account.path.account.initialize=${ms.api.path}/account/initialize/{accountId}

ms.account.timeout.connect=30000
ms.account.timeout.read=30000
## Ui ##
ms.ui.host=www.cryptobrewmaster.io
ms.ui.uri=https://${ms.ui.host}
#
## MongoDB Configuration ##
#
mongodb.database=authentication
mongodb.host=${host}
mongodb.port=27017
mongodb.user=user
mongodb.password=password
mongodb.maxPoolSize=100
mongodb.connectTimeoutMS=15000
mongodb.socketTimeoutMS=60000
mongodb.waitQueueMultiple=10
mongodb.waitQueueTimeoutMS=12000
mongodb.readPreference=primary
mongodb.credentials=${mongodb.user}:${mongodb.password}@

spring.data.mongodb.auto-index-creation=true

spring.data.mongodb.uri=mongodb://${mongodb.credentials}${mongodb.host}:${mongodb.port}/${mongodb.database}\
  ?maxPoolSize=${mongodb.maxPoolSize}\
  &connectTimeoutMS=${mongodb.connectTimeoutMS}\
  &socketTimeoutMS=${mongodb.socketTimeoutMS}\
  &waitQueueMultiple=${mongodb.waitQueueMultiple}\
  &waitQueueTimeoutMS=${mongodb.waitQueueTimeoutMS}\
  &readPreference=${mongodb.readPreference}
#
## Kafka Configuration ##
#
kafka.host=${host}
kafka.port=9092
kafka.bootstrap-servers=${kafka.host}:${kafka.port}
kafka.config.group-id=authentication-group-id
kafka.config.client-id=authentication-client-id
kafka.config.enable-auto-commit=true

kafka.topic.account-init=account-init
#
## RestTemplate Configuration ##
#
http.connection.pool.max-total=128
http.connection.pool.default-max-per-route=64
http.connection.pool.socket-timeout=30000
#
## Server gzip compression (works only for embedded tomcat) ##
#
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
server.compression.min-response-size=4096